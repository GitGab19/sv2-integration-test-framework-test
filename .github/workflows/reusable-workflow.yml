name: Integration Test with Custom Branch (Fixed)

on:
  workflow_call:
    inputs:
      repo_name:
        description: 'Repository name (sv2-core-test, sv2-pool-apps-test, or sv2-miner-apps-test)'
        required: true
        type: string
      branch_name:
        description: 'Branch name to test'
        required: true
        type: string
      repo_url:
        description: 'Repository URL (for handling forks)'
        required: true
        type: string

jobs:
  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: 🧪 Integration Test Setup - What are we testing?
        run: |
          echo "🧪 =============================================="
          echo "🧪 SV2 INTEGRATION TEST - TESTING PR CHANGES"
          echo "🧪 =============================================="
          echo ""
          echo "🎯 WHAT ARE WE TESTING?"
          echo "   Repository with changes: ${{ inputs.repo_name }}"
          echo "   Branch with PR changes:  ${{ inputs.branch_name }}"
          echo "   Source repository:       ${{ inputs.repo_url }}"
          echo ""
          echo "🔍 HOW THE TEST WORKS:"
          case "${{ inputs.repo_name }}" in
            "sv2-core-test")
              echo "   • Integration tests will use YOUR sv2-core-test changes"
              echo "   • Pool apps (jd-server, pool) will use stable main branch"
              echo "   • Miner apps (jd-client, translator) will use stable main branch"
              echo "   • This tests if your protocol changes break pool/miner apps"
              ;;
            "sv2-pool-apps-test")
              echo "   • Integration tests will use YOUR pool app changes"
              echo "   • Core protocols will use stable main branch"  
              echo "   • Miner apps will use stable main branch"
              echo "   • This tests if your pool changes work with stable protocols"
              ;;
            "sv2-miner-apps-test")
              echo "   • Integration tests will use YOUR miner app changes"
              echo "   • Core protocols will use stable main branch"
              echo "   • Pool apps will use stable main branch"  
              echo "   • This tests if your miner changes work with stable protocols"
              ;;
          esac
          echo ""
          echo "⏰ Test started at: $(date)"
          echo "🧪 =============================================="

      - name: Derive repo slug from URL
        id: derive_slug
        run: |
          REPO_URL="${{ inputs.repo_url }}"
          REPO_SLUG=$(echo "$REPO_URL" | sed -E 's#(https://github.com/|git@github.com:|.git$)##g')
          echo "slug=$REPO_SLUG" >> $GITHUB_OUTPUT
          echo "📍 Derived repository slug: $REPO_SLUG"

      - name: 📥 Checkout repository with PR changes
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.derive_slug.outputs.slug }}
          ref: ${{ inputs.branch_name }}
          path: pr-changes
          fetch-depth: 1
          
      - name: Checkout integration test framework
        uses: actions/checkout@v4
        with:
          repository: GitGab19/sv2-integration-test-framework-test
          path: integration-tests
          fetch-depth: 1
          
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          
      - name: Cache cargo registry and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            integration-tests/target
          key: ${{ runner.os }}-cargo-integration-${{ inputs.repo_name }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-integration-${{ inputs.repo_name }}-
            ${{ runner.os }}-cargo-integration-
          
      - name: 🔧 Configure integration tests to use PR changes
        run: |
          echo "🔧 =============================================="
          echo "🔧 CONFIGURING INTEGRATION TESTS"
          echo "🔧 =============================================="
          echo ""
          echo "🎯 Goal: Make integration tests use PR changes"
          echo "📂 PR code is in: pr-changes/"
          echo "🧪 Integration tests are in: integration-tests/"
          echo ""
          
          cd integration-tests
          
          # Create .cargo/config.toml to prevent workspace discovery conflicts
          mkdir -p .cargo
          {
            echo "# Prevent Cargo from discovering parent workspaces that could conflict"
            echo "[build]"
            echo "target-dir = \"target\""
          } > .cargo/config.toml
          echo "🛡️  Created workspace isolation config"

          # Set up directory paths based on repository being tested
          echo ""
          echo "🔀 Setting up dependency redirects..."
          
          # Get commit hash for patch section comments
          cd ../pr-changes
          PR_COMMIT_HASH=$(git rev-parse HEAD)
          PR_SHORT_HASH=$(git rev-parse --short HEAD)
          cd ../integration-tests
          
          case "${{ inputs.repo_name }}" in
            "sv2-core-test")
              PR_CHANGES_DIR="../pr-changes"
              echo "📋 Testing sv2-core-test PR - will redirect ALL protocol crates to PR changes"
              echo "🔖 Using commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
              
              # Redirect integration test dependencies to use PR changes
              echo "🔀 Redirecting sv2-core-test dependencies to PR changes..."
              sed -i "s|stratum-common = { git = \"https://github.com/GitGab19/sv2-core-test\", branch = \"main\", features = \[\"with_network_helpers\", \"sv1\"\] }|stratum-common = { path = \"$PR_CHANGES_DIR/common\", features = [\"with_network_helpers\", \"sv1\"] }|g" Cargo.toml
              sed -i "s|sv1_api = { git = \"https://github.com/GitGab19/sv2-core-test\", branch = \"main\", optional = true }|sv1_api = { path = \"$PR_CHANGES_DIR/sv1\", optional = true }|g" Cargo.toml
              sed -i "s|key-utils = { git = \"https://github.com/GitGab19/sv2-core-test\", branch = \"main\" }|key-utils = { path = \"$PR_CHANGES_DIR/utils/key-utils\" }|g" Cargo.toml
              sed -i "s|config-helpers = { git = \"https://github.com/GitGab19/sv2-core-test\", branch = \"main\" }|config-helpers = { path = \"$PR_CHANGES_DIR/roles-utils/config-helpers\" }|g" Cargo.toml

               # Force ALL sv2-core-test crates to use PR changes
               echo "🎯 Adding comprehensive patch to force ALL sv2-core-test crates to use PR changes..."
               {
                 echo ""
                 echo "# INTEGRATION TEST OVERRIDE: Use PR changes for all sv2-core-test crates"
                 echo "# Testing commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
                 echo "# Branch: ${{ inputs.branch_name }} from ${{ inputs.repo_url }}"
                 echo "[patch.\"https://github.com/GitGab19/sv2-core-test\"]"
                 echo "stratum-common = { path = \"$PR_CHANGES_DIR/common\" }"
                 echo "sv1_api = { path = \"$PR_CHANGES_DIR/sv1\" }"
                 echo "key-utils = { path = \"$PR_CHANGES_DIR/utils/key-utils\" }"
                 echo "config-helpers = { path = \"$PR_CHANGES_DIR/roles-utils/config-helpers\" }"
                 echo "roles_logic_sv2 = { path = \"$PR_CHANGES_DIR/sv2/roles-logic-sv2\" }"
                 echo "network_helpers_sv2 = { path = \"$PR_CHANGES_DIR/roles-utils/network-helpers\" }"
                 echo "binary_sv2 = { path = \"$PR_CHANGES_DIR/sv2/binary-sv2\" }"
                 echo "binary_codec_sv2 = { path = \"$PR_CHANGES_DIR/sv2/binary-sv2/codec\" }"
                 echo "derive_codec_sv2 = { path = \"$PR_CHANGES_DIR/sv2/binary-sv2/derive_codec\" }"
                 echo "noise_sv2 = { path = \"$PR_CHANGES_DIR/sv2/noise-sv2\" }"
                 echo "framing_sv2 = { path = \"$PR_CHANGES_DIR/sv2/framing-sv2\" }"
                 echo "codec_sv2 = { path = \"$PR_CHANGES_DIR/sv2/codec-sv2\" }"
                 echo "common_messages_sv2 = { path = \"$PR_CHANGES_DIR/sv2/subprotocols/common-messages\" }"
                 echo "template_distribution_sv2 = { path = \"$PR_CHANGES_DIR/sv2/subprotocols/template-distribution\" }"
                 echo "mining_sv2 = { path = \"$PR_CHANGES_DIR/sv2/subprotocols/mining\" }"
                 echo "job_declaration_sv2 = { path = \"$PR_CHANGES_DIR/sv2/subprotocols/job-declaration\" }"
                 echo "channels_sv2 = { path = \"$PR_CHANGES_DIR/sv2/channels-sv2\" }"
                 echo "parsers_sv2 = { path = \"$PR_CHANGES_DIR/sv2/parsers-sv2\" }"
                 echo "buffer_sv2 = { path = \"$PR_CHANGES_DIR/utils/buffer\" }"
                 echo "error_handling = { path = \"$PR_CHANGES_DIR/utils/error-handling\" }"
                 echo "rpc_sv2 = { path = \"$PR_CHANGES_DIR/roles-utils/rpc\" }"
               } >> Cargo.toml
               echo "✅ All 21 sv2-core-test crates will now use PR changes"
              ;;
              
            "sv2-pool-apps-test")
              PR_CHANGES_DIR="../pr-changes"
              echo "📋 Testing sv2-pool-apps-test PR - will redirect pool apps to PR changes"
              echo "🔖 Using commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
              
              # Redirect integration test dependencies to use PR changes
              echo "🔀 Redirecting pool app dependencies to PR changes..."
              sed -i "s|jd_server = { git = \"https://github.com/GitGab19/sv2-pool-apps-test\", branch = \"main\" }|jd_server = { path = \"$PR_CHANGES_DIR/jd-server\" }|g" Cargo.toml
              sed -i "s|pool_sv2 = { git = \"https://github.com/GitGab19/sv2-pool-apps-test\", branch = \"main\" }|pool_sv2 = { path = \"$PR_CHANGES_DIR/pool\" }|g" Cargo.toml

               # Force pool app crates to use PR changes  
               echo "🎯 Adding patch to force pool app crates to use PR changes..."
               {
                 echo ""
                 echo "# INTEGRATION TEST OVERRIDE: Use PR changes for pool app crates"
                 echo "# Testing commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
                 echo "# Branch: ${{ inputs.branch_name }} from ${{ inputs.repo_url }}"
                 echo "[patch.\"https://github.com/GitGab19/sv2-pool-apps-test\"]"
                 echo "jd_server = { path = \"$PR_CHANGES_DIR/jd-server\" }"
                 echo "pool_sv2 = { path = \"$PR_CHANGES_DIR/pool\" }"
               } >> Cargo.toml
               echo "✅ Pool app crates will now use PR changes"
              ;;
              
            "sv2-miner-apps-test")
              PR_CHANGES_DIR="../pr-changes"
              echo "📋 Testing sv2-miner-apps-test PR - will redirect miner apps to PR changes"
              echo "🔖 Using commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
              
              # Redirect integration test dependencies to use PR changes
              echo "🔀 Redirecting miner app dependencies to PR changes..."
              sed -i "s|jd_client = { git = \"https://github.com/GitGab19/sv2-miner-apps-test\", branch = \"main\" }|jd_client = { path = \"$PR_CHANGES_DIR/jd-client\" }|g" Cargo.toml
              sed -i "s|translator_sv2 = { git = \"https://github.com/GitGab19/sv2-miner-apps-test\", branch = \"main\" }|translator_sv2 = { path = \"$PR_CHANGES_DIR/translator\" }|g" Cargo.toml
              sed -i "s|mining_device = { git = \"https://github.com/GitGab19/sv2-miner-apps-test\", branch = \"main\" }|mining_device = { path = \"$PR_CHANGES_DIR/test-utils/mining-device\" }|g" Cargo.toml
              sed -i "s|mining_device_sv1 = { git = \"https://github.com/GitGab19/sv2-miner-apps-test\", branch = \"main\" }|mining_device_sv1 = { path = \"$PR_CHANGES_DIR/test-utils/mining-device-sv1\" }|g" Cargo.toml

               # Force miner app crates to use PR changes
               echo "🎯 Adding patch to force miner app crates to use PR changes..."
               {
                 echo ""
                 echo "# INTEGRATION TEST OVERRIDE: Use PR changes for miner app crates"
                 echo "# Testing commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
                 echo "# Branch: ${{ inputs.branch_name }} from ${{ inputs.repo_url }}"
                 echo "[patch.\"https://github.com/GitGab19/sv2-miner-apps-test\"]"
                 echo "jd_client = { path = \"$PR_CHANGES_DIR/jd-client\" }"
                 echo "translator_sv2 = { path = \"$PR_CHANGES_DIR/translator\" }"
                 echo "mining_device = { path = \"$PR_CHANGES_DIR/test-utils/mining-device\" }"
                 echo "mining_device_sv1 = { path = \"$PR_CHANGES_DIR/test-utils/mining-device-sv1\" }"
               } >> Cargo.toml
               echo "✅ Miner app crates will now use PR changes"
              ;;
              
            *)
              echo "❌ Unknown repository: ${{ inputs.repo_name }}"
              exit 1
              ;;
          esac
          
          echo ""
          echo "🎉 =============================================="
          echo "🎉 CONFIGURATION COMPLETE!"
          echo "🎉 =============================================="
          echo "✅ Integration tests are now configured to use PR changes"
          echo "📋 What happens next:"
          echo "   1. Cargo will build PR changes from pr-changes/"
          echo "   2. Integration tests will run using PR code"
          echo "   3. Any failures indicate PR changes break integration"
          echo ""
          echo "📄 Updated integration test configuration (last 20 lines):"
          tail -20 Cargo.toml
          echo ""
          echo "🔖 COMMIT HASH VERIFICATION:"
          echo "   Testing commit: $PR_SHORT_HASH"
          echo "   Full hash: $PR_COMMIT_HASH"
          echo "   From: ${{ inputs.repo_url }}/tree/${{ inputs.branch_name }}"
          
      - name: 🌳 Show dependency tree for manual verification
        run: |
          cd integration-tests
          
          # Get commit info for display
          cd ../pr-changes
          PR_COMMIT_HASH=$(git rev-parse HEAD)
          PR_SHORT_HASH=$(git rev-parse --short HEAD)
          cd ../integration-tests
          
          echo "🌳 =============================================="
          echo "🌳 DEPENDENCY TREE - MANUAL VERIFICATION"
          echo "🌳 =============================================="
          echo ""
          echo "📋 This shows exactly which code is being used by pool/miner apps:"
          echo "🔖 Testing commit: $PR_SHORT_HASH ($PR_COMMIT_HASH)"
          echo ""
          
          cargo tree --features sv1 | grep -E "(jd_server|pool_sv2|jd_client|translator_sv2|stratum-common|buffer_sv2|key-utils|config-helpers|error_handling)"
          
          echo ""
          echo "🔍 WHAT TO LOOK FOR:"
          echo ""
          case "${{ inputs.repo_name }}" in
            "sv2-core-test")
              echo "✅ EXPECTED - sv2-core-test crates should show LOCAL paths like:"
              echo "   stratum-common v3.0.0 (/github/workspace/pr-changes/common) [commit $PR_SHORT_HASH]"
              echo "   buffer_sv2 v2.0.0 (/github/workspace/pr-changes/utils/buffer) [commit $PR_SHORT_HASH]"
              echo ""
              echo "✅ EXPECTED - pool/miner apps should show GIT URLs like:"
              echo "   jd_server v0.1.3 (https://github.com/GitGab19/sv2-pool-apps-test?branch=main)"
              echo "   jd_client v0.1.4 (https://github.com/GitGab19/sv2-miner-apps-test?branch=main)"
              ;;
            "sv2-pool-apps-test")
              echo "✅ EXPECTED - pool apps should show LOCAL paths like:"
              echo "   jd_server v0.1.3 (/github/workspace/pr-changes/jd-server) [commit $PR_SHORT_HASH]"
              echo "   pool_sv2 v0.1.3 (/github/workspace/pr-changes/pool) [commit $PR_SHORT_HASH]"
              echo ""
              echo "✅ EXPECTED - sv2-core crates should show GIT URLs like:"
              echo "   stratum-common v3.0.0 (git+https://github.com/GitGab19/sv2-core-test)"
              ;;
            "sv2-miner-apps-test")
              echo "✅ EXPECTED - miner apps should show LOCAL paths like:"
              echo "   jd_client v0.1.4 (/github/workspace/pr-changes/jd-client) [commit $PR_SHORT_HASH]"
              echo "   translator_sv2 v1.0.0 (/github/workspace/pr-changes/translator) [commit $PR_SHORT_HASH]"
              echo ""
              echo "✅ EXPECTED - sv2-core crates should show GIT URLs like:"
              echo "   stratum-common v3.0.0 (git+https://github.com/GitGab19/sv2-core-test)"
              ;;
          esac
          
          echo ""
          echo "🎯 If you see the expected pattern above, PR changes (commit $PR_SHORT_HASH) are being tested correctly!"
          echo "🌳 =============================================="
          
      - name: Run integration tests
        run: |
          cd integration-tests
          
          # Get commit info for test logs
          cd ../pr-changes
          PR_COMMIT_HASH=$(git rev-parse HEAD)
          PR_SHORT_HASH=$(git rev-parse --short HEAD)
          COMMIT_SUBJECT=$(git log -1 --pretty=format:'%s')
          cd ../integration-tests
          
          echo "🏃 =============================================="
          echo "🏃 RUNNING INTEGRATION TESTS"
          echo "🏃 =============================================="
          echo "🔖 Testing commit: $PR_SHORT_HASH"
          echo "   Full hash: $PR_COMMIT_HASH"
          echo "   Message: $COMMIT_SUBJECT"
          echo "   Repository: ${{ inputs.repo_name }}"
          echo "   Branch: ${{ inputs.branch_name }}"
          echo ""
          
          # Show effective configuration
          echo "📋 Cargo configuration:"
          echo "├── Working directory: $(pwd)"
          echo "├── PR changes directory: ../pr-changes"
          echo "└── Workspace isolation: .cargo/config.toml"
          
          # Run tests with verbose output
          echo "🧪 Starting integration tests for commit $PR_SHORT_HASH..."
          echo ""
          cargo test --features sv1 --verbose